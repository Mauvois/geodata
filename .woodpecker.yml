steps:
  debug:
    image: alpine
    commands:
      - echo "‚úÖ Pipeline d√©clench√© sur $CI_COMMIT_BRANCH"
      - echo "Event d√©clencheur : $CI_PIPELINE_EVENT"

  build:
    image: python:3.11
    commands:
      - echo "üß™ Nouveau build √† $(date) pour test"
      - pip install -r requirements.txt
      - echo "‚úÖ Linting & Tests √† venir ici"
    when:
      branch: [main, dev]
      event: [push, manual]

  deploy-prod:
    image: docker/compose:1.29.2
    depends_on: [build]
    commands:
      - docker-compose -f docker-compose.prod.yml up -d --build
    environment:
      DB_HOST:
        from_secret: DB_HOST
      DB_PORT:
        from_secret: DB_PORT
      DB_USER:
        from_secret: DB_USER
      DB_PASSWORD:
        from_secret: DB_PASSWORD
      DB_NAME:
        from_secret: DB_NAME
    when:
      branch: [main]
      event: [push, manual]

  deploy-staging:
    image: docker/compose:1.29.2
    privileged: true
    depends_on: [build]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - docker-compose -f docker-compose.staging.yml -p geodata_api_staging down --remove-orphans || true
      - docker-compose -f docker-compose.staging.yml -p geodata_api_staging up -d --build --remove-orphans
      - sleep 5
      - curl -s -o /dev/null -w "%{http_code}" http://localhost:8010/data | grep 200 || (echo "‚ùå Endpoint KO" && exit 1)
    environment:
      DB_HOST:
        from_secret: DB_HOST
      DB_PORT:
        from_secret: DB_PORT
      DB_USER:
        from_secret: DB_USER
      DB_PASSWORD:
        from_secret: DB_PASSWORD
      DB_NAME:
        from_secret: DB_NAME
    when:
      branch: [dev]
      event: [push, manual]
